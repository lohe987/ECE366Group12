*memory
	P: ~hb~ 10
	Q: ~hb~ -21
	Result: ~hb~ 0
	One: ~hb~ 1
	NegOne: ~hb~ -1
	Zero: ~hb~ 0

*instructions
	
	LWD r0, [0] //Set r0 to power.

	LWD r1, [3] //r1 = 1.
	LWD r2, [3] //r2 = 1.

loop1:
	SLE r0, 0
	JIF out1
	SHL r1, 1
	ADD r1, r2
	SHL r1, 1
	LWD r2, [5]
	ADD r2, r1
	
jumpBack2:
	JIF loop1
loop2:
	SLE r1, 0
	JIF out1
	LWD r3, [1] //Set r3 to Q.
	SWD r1, [2] //Store result.
	ADD r1, r3 //Subtract Q.
	LWD r3, [3] //r3 = 1 to force a jump.
	JIF loop2 //Jump to loop2.

jumpBack1:
	JIF jumpBack2
out1:
	LWD r1, [2] //Set r1 back to before it was negative.
	SLE r0, 0
	JIF out2

	LWD r3, [4]
	ADD r0, r3
	LWD r3, [3] //Set r3 to 1 to force a jump.
	JIF jumpBack1 

out2: 
	HLT
